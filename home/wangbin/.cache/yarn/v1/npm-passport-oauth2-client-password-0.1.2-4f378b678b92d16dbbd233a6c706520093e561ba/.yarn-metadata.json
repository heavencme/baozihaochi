{
  "manifest": {
    "name": "passport-oauth2-client-password",
    "version": "0.1.2",
    "description": "OAuth 2.0 client password authentication strategy for Passport.",
    "keywords": [
      "passport",
      "oauth",
      "oauth2",
      "authn",
      "authentication",
      "authz",
      "authorization",
      "api"
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/jaredhanson/passport-oauth2-client-password.git"
    },
    "bugs": {
      "url": "http://github.com/jaredhanson/passport-oauth2-client-password/issues"
    },
    "author": {
      "name": "Jared Hanson",
      "email": "jaredhanson@gmail.com",
      "url": "http://www.jaredhanson.net/"
    },
    "licenses": [
      {
        "type": "MIT",
        "url": "http://www.opensource.org/licenses/MIT"
      }
    ],
    "main": "./lib",
    "dependencies": {
      "passport-strategy": "1.x.x"
    },
    "devDependencies": {
      "vows": "0.7.x"
    },
    "scripts": {
      "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
    },
    "engines": {
      "node": ">= 0.4.0"
    },
    "_registry": "npm",
    "_loc": "/home/wangbin/.cache/yarn/v1/npm-passport-oauth2-client-password-0.1.2-4f378b678b92d16dbbd233a6c706520093e561ba/package.json",
    "readmeFilename": "README.md",
    "readme": "# passport-oauth2-client-password\n\nOAuth 2.0 client password authentication strategy for [Passport](https://github.com/jaredhanson/passport).\n\nThis module lets you authenticate requests containing client credentials in the\nrequest body, as [defined](http://tools.ietf.org/html/draft-ietf-oauth-v2-27#section-2.3.1)\nby the OAuth 2.0 specification.  These credentials are typically used protect\nthe token endpoint and used as an alternative to HTTP Basic authentication.\n\n## Install\n\n    $ npm install passport-oauth2-client-password\n\n## Usage\n\n#### Configure Strategy\n\nThe OAuth 2.0 client password authentication strategy authenticates clients\nusing a client ID and client secret.  The strategy requires a `verify` callback,\nwhich accepts those credentials and calls `done` providing a client.\n\n    passport.use(new ClientPasswordStrategy(\n      function(clientId, clientSecret, done) {\n        Clients.findOne({ clientId: clientId }, function (err, client) {\n          if (err) { return done(err); }\n          if (!client) { return done(null, false); }\n          if (client.clientSecret != clientSecret) { return done(null, false); }\n          return done(null, client);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'oauth2-client-password'`\nstrategy, to authenticate requests.  This strategy is typically used in\ncombination with HTTP Basic authentication (as provided by [passport-http](https://github.com/jaredhanson/passport-http)),\nallowing clients to include credentials in the request body.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication, using [OAuth2orize](https://github.com/jaredhanson/oauth2orize)\nmiddleware to implement the token endpoint:\n\n    app.get('/profile', \n      passport.authenticate(['basic', 'oauth2-client-password'], { session: false }),\n      oauth2orize.token());\n\n## Examples\n\nThe [example](https://github.com/jaredhanson/oauth2orize/tree/master/examples/express2)\nincluded with [OAuth2orize](https://github.com/jaredhanson/oauth2orize)\ndemonstrates how to implement a complete OAuth 2.0 authorization server.\n`ClientPasswordStrategy` is used to authenticate clients as they request access\ntokens from the token endpoint.\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport-oauth2-client-password.png)](http://travis-ci.org/jaredhanson/passport-oauth2-client-password)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2012-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
    "license": "MIT",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2012-2013 Jared Hanson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/passport-oauth2-client-password/-/passport-oauth2-client-password-0.1.2.tgz#4f378b678b92d16dbbd233a6c706520093e561ba",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/passport-oauth2-client-password/-/passport-oauth2-client-password-0.1.2.tgz",
    "hash": "4f378b678b92d16dbbd233a6c706520093e561ba",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "4f378b678b92d16dbbd233a6c706520093e561ba"
}