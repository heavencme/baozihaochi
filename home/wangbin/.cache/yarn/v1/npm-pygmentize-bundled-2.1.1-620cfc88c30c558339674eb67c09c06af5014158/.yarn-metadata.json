{
  "manifest": {
    "name": "pygmentize-bundled",
    "version": "2.1.1",
    "description": "A simple wrapper around Python's Pygments code formatter, with Pygments bundled",
    "main": "index.js",
    "scripts": {
      "test": "node ./test.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/rvagg/node-pygmentize-bundled.git"
    },
    "keywords": [
      "pygments",
      "pygmentize",
      "syntax",
      "highlight",
      "stream"
    ],
    "authors": [
      "Rod Vagg @rvagg <rod@vagg.org> (https://github.com/rvagg)",
      "Cyril Rohr @crohr (https://github.com/crohr)",
      "Ahmed Fasih (https://github.com/fasiha)",
      "Scott Walkinshaw (https://github.com/swalkinshaw)",
      "Chris Wren (https://github.com/ChrisWren)"
    ],
    "license": "MIT",
    "dependencies": {
      "mkdirp": "~0.3.5",
      "readable-stream": "~1.0.17",
      "bl": "~0.4.1",
      "through2": "~0.2.1"
    },
    "devDependencies": {
      "stream-equal": ">= 0.0.1",
      "tape": "*"
    },
    "_registry": "npm",
    "_loc": "/home/wangbin/.cache/yarn/v1/npm-pygmentize-bundled-2.1.1-620cfc88c30c558339674eb67c09c06af5014158/package.json",
    "readmeFilename": "README.md",
    "readme": "# Pygmentize (Bundled)\n\n**Python's Pygments code formatter, for Node.js, distributed with Pygments**\n\n[![NPM](https://nodei.co/npm/pygmentize-bundled.png?downloads=true&stars=true)](https://nodei.co/npm/pygmentize-bundled/) [![NPM](https://nodei.co/npm-dl/pygmentize-bundled.png?months=6)](https://nodei.co/npm/pygmentize-bundled/)\n\nCan be used as either a *String-in, Buffer-out*, or as a Duplex stream.\n\nCompatible with both Python v2 and v3.\n\n## API\n\n**pygmentize(options, code, callback)**\n\nPygmentize a given `code` string and return it as a Buffer to the `callback` Function.\n\n* `options` contains options to be passed to Pygments (see [Options](#options)).\n* `code` is a String to be formatted.\n* `callback` is a Function, called when complete. The first argument will be an `error` object/string if there was a problem and the second argument will be a Buffer containing your formatted code.\n\n**pygmentize(options)**\n\nWhen you only supply the `options` argument, it will return a Duplex stream that you can pipe to and from to format your code.\n\n* `options` contains options to be passed to Pygments (see [Options](#options)).\n\n## Options\n\nLanguage/lexer, formatter, and their options are currently supported. Filters are not supported yet.\n\n* `lang`: source language/lexer name - `String`\n* `format`: output formatter name - `String`\n* `python`: the full path to the `python` command on the current system, defaults to `'python'` - `String`\n* `options`: lexer and formatter options, each key/value pair is passed through to `pygmentize` with `-P` - `Object`\n\n## Examples\n\nThe string interface is very simple:\n\n```js\nvar pygmentize = require('pygmentize-bundled')\n\npygmentize({ lang: 'js', format: 'html' }, 'var a = \"b\";', function (err, result) {\n  console.log(result.toString())\n})\n```\n\nResults in:\n\n```html\n<div class=\"highlight\"><pre>\n  <span class=\"kd\">var</span>\n  <span class=\"nx\">a</span>\n  <span class=\"o\">=</span>\n  <span class=\"s2\">&quot;b&quot;</span>\n  <span class=\"p\">;</span>\n</pre></div>\n```\n\nExample with extra options:\n\n```js\nvar pygmentize = require('pygmentize-bundled')\n\npygmentize({ lang: 'php', format: 'html', options: { startinline: 1 } }, 'var a = true;', function (err, result) {\n  console.log(result.toString())\n})\n```\n\nA duplex streaming API is also available. Simply omit the `code` and `callback` arguments:\n\n```js\nvar pygmentize = require('pygmentize-bundled')\n\nprocess.stdin\n  .pipe(pygmentize({ lang: 'js', format: 'html' }))\n  .pipe(process.stdout);\n```\n\nRefer to the [Pygments documentation](http://pygments.org/docs/). For supported languages, see the list of [lexers](http://pygments.org/docs/lexers/), for supported formatted, see the list of [formatters](http://pygments.org/docs/formatters/).\n\n## Contributors\n\n* [Rod Vagg](https://github.com/rvagg)\n* [Cyril Rohr](https://github.com/crohr)\n* [Ahmed Fasih](https://github.com/fasiha)\n* [Scott Walkinshaw](https://github.com/swalkinshaw)\n* [Chris Wren](https://github.com/ChrisWren)\n\n## Licence & copyright\n\nPygments (Bundled) is Copyright (c) 2012 Rod Vagg <@rvagg> and licenced under the MIT licence. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.\n\nPygments is licenced under the BSD licence.\n",
    "licenseText": "Copyright 2012, Rod Vagg (the \"Original Author\")\nAll rights reserved.\n\nMIT +no-false-attribs License\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nDistributions of all or part of the Software intended to be used\nby the recipients as they would use the unmodified Software,\ncontaining modifications that substantially alter, remove, or\ndisable functionality of the Software, outside of the documented\nconfiguration mechanisms provided by the Software, shall be\nmodified such that the Original Author's bug reporting email\naddresses and urls are either replaced with the contact information\nof the parties responsible for the changes, or removed entirely.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n\nExcept where noted, this license applies to any and all software\nprograms and associated documentation files created by the\nOriginal Author, when distributed with the Software."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/pygmentize-bundled/-/pygmentize-bundled-2.1.1.tgz#620cfc88c30c558339674eb67c09c06af5014158",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/pygmentize-bundled/-/pygmentize-bundled-2.1.1.tgz",
    "hash": "620cfc88c30c558339674eb67c09c06af5014158",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "620cfc88c30c558339674eb67c09c06af5014158"
}