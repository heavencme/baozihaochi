{
  "manifest": {
    "name": "connect-slashes",
    "version": "1.3.1",
    "description": "Trailing slash redirect middleware for Connect and Express.js",
    "keywords": [
      "trailing",
      "slash",
      "connect",
      "middleware",
      "express"
    ],
    "author": {
      "name": "Roi Avinoam",
      "email": "avinoamr@gmail.com"
    },
    "contributors": [
      {
        "name": "Feross Aboukhadijeh",
        "email": "feross@feross.org",
        "url": "http://feross.org"
      },
      {
        "name": "brunogfranca",
        "url": "https://github.com/brunogfranca"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/avinoamr/connect-slashes.git"
    },
    "devDependencies": {
      "mocha": "~1.14.0"
    },
    "scripts": {
      "test": "node_modules/mocha/bin/mocha"
    },
    "main": "index",
    "license": "MIT",
    "engines": {
      "node": "*"
    },
    "_registry": "npm",
    "_loc": "/home/wangbin/.cache/yarn/v1/npm-connect-slashes-1.3.1-95d61830d0f9d5853c8688f0b5f43988b186ac37/package.json",
    "readmeFilename": "README.md",
    "readme": "connect-slashes\n===============\n\nTrailing slash redirect middleware for Connect and Express.js. Useful for creating canonical urls in your Node.js applications.\n\n## Installation\n\n```\n$ npm install connect-slashes\n```\n\n## Usage\n\n```javascript\nvar connect = require(\"connect\")\n  , slashes = require(\"connect-slashes\");\n\nconnect()\n  .use(connect.logger())\n  .use(connect.static())\n  .use(slashes())\n  .listen(3000);\n```\n\nAlternatively, you can pass `false` as the first argument to `.slashes()` in order to remove trailing slashes instead of appending them:\n\n```javascript\n.use(slashes(false));\n```\n\n## Additional settings\n\nYou can also pass a second argument with an options object. For example, if an application is behind a reverse proxy server that removes part of the URL (a base_path) before proxying to the application, then the `base` can be specified with an option:\n\n```javascript\n.use(slashes(true, { base: \"/blog\" })); // prepends a base url to the redirect\n```\n\nBy default, all redirects are using the 301 Moved Permanently header. You can change this behavior by passing in the optional `code` option:\n\n```javascript\n.use(slashes(true, { code: 302 })); // 302 Temporary redirects\n```\n\nYou can also set additional headers to the redirect response with the `headers` option:\n\n```javascript\n.use(slashes(true, { headers: { \"Cache-Control\": \"public\" } }));\n```\n\n## Notes\n\n1. Only GET requests will be redirected (to avoid losing POST/PUT data)\n2. This middleware will append or remove a trailing slash to all request urls. This includes filenames (/app.css => /app.css/), so it may break your static files. Make sure to `.use()` this middleware only after the `connect.static()` middleware.\n\n## LICENSE\n\nMIT\n",
    "licenseText": "Copyright (c) 2010-2013 Roi Avinoam <avinoamr@gmail.com> and connect-slashes authors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/connect-slashes/-/connect-slashes-1.3.1.tgz#95d61830d0f9d5853c8688f0b5f43988b186ac37",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/connect-slashes/-/connect-slashes-1.3.1.tgz",
    "hash": "95d61830d0f9d5853c8688f0b5f43988b186ac37",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "95d61830d0f9d5853c8688f0b5f43988b186ac37"
}